#!/usr/bin/perl

use Verse;
use Verse::Demo;
use Verse::Default;
use Getopt::Long;
my %OPTIONS = ();
GetOptions(\%OPTIONS, qw/
	local|l
	help|h
	version|v
/);

$ENV{VERSE_LOCAL} = 1    if $OPTIONS{local};
unshift @ARGV, "help"    if $OPTIONS{help};
unshift @ARGV, "version" if $OPTIONS{version};

sub file
{
	my ($path, $contents) = @_;
	!-f $path or die "$path already exists.\n";
	open my $fh, ">", $path
		or die "Failed to create $path: $!\n";
	print $fh $contents;
	close $fh;
}

my $CMD = shift @ARGV || 'help';
if ($CMD eq 'version') {
	print "Verse v$Verse::VERSION\n";
	exit 0;
}
if ($CMD eq 'build') {
	rhyme;

	my $theme = verse->{paths}{theme}.'/render';
	die "Failed to find theme file: $theme\n"
		unless -x $theme;

	eval { require $theme } or die "$@\n";
	exit 0;
}

if ($CMD eq 'run' or $CMD eq 'demo') {
	demo htdocs => 'htdocs';
}

if ($CMD eq 'new' or $CMD eq 'setup') {
	my $dir = shift @ARGV;
	if ($dir) {
		!-d $dir or die "$dir/ already exists!\n";
		mkdir $dir;
		chdir $dir;
	}
	!-f "site.yml" or die "site.yml file already exists!\n";
	!-f "Makefile" or die "Cowardly refusing to clobber your existing Makefile\n";

	Verse::Default::extract($dir);
	exec "$ENV{EDITOR} site.yml; $0 build";
	exit 0;
}

print "USAGE: $0 (new|build|run|help)\n";
exit 1;

=head1 NAME

verse - Static Website Generator

=head1 DESCRIPTION

Tired of installing and configuring web application servers and databases?

Sick of the load that dynamic CMS and blog software put on your cloud VM?

Still want layout and templating that these tools provide?

Love text files?

Verse is the website software for you!  Harkening back to the early days
of the web, Verse revives the near-dead art of hand-crafted HTML and
static (read:fast) web sites.

=head1 AUTHOR

James Hunt C<< <james@niftylogic.com> >>

=cut
